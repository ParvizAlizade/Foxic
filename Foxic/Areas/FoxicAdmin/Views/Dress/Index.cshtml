@model IEnumerable<Foxic.Entities.Dress>

@{
    ViewData["Title"] = "Index";
}
@section CSS{
    <style>
        .pointerNone {
            pointer-events: none;
        }
    </style>
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@section Scripts{
    <script>
        var count = 4;
        document.getElementById("searchInput").addEventListener("input", function () {
            count++;
            if (count > 3) {
                var url = "./Search?data=" + this.value
                fetch(url).then(response => response.json()).then(data => console.log(data))
                count = 0;
            }
        })

    </script>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model=>model.DressImages)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DisountPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SKU)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Availability)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Barcode)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                <td>
                    <img style="width:80px;height:80px;object-fit:contain" src="~/assets/images/products//@item.DressImages.FirstOrDefault(d=>d.IsMain==true)?.Path">
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DisountPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SKU)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Availability)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Barcode)
            </td>
            <td>
                @foreach (var colorSize in item.DressColorSizes)
                {
                <p>
                @colorSize.Size.Name => @colorSize.Color.Name ===> @colorSize.Quantity
                </p>
                }
                </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<nav class="mt-3 d-flex justify-content-center" aria-label="...">
    <ul class="pagination">
        <li class="page-item  @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage-1)" tabindex="-1">Previous</a>
        </li>
        @for (int i = 1; i <= ViewBag.TotalPage; i++)
        {
            <li class="page-item @(i==ViewBag.CurrentPage ? "active pointerNone" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }

        <li class="page-item @(ViewBag.TotalPage == ViewBag.CurrentPage ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage+1)">Next</a>
        </li>
    </ul>
</nav>